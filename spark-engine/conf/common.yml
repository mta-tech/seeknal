
---
# input sources that will be for feature computation
sources:
  - id: base_input
    source: hive
    # if database is specified in base_input, all feature tables will be generated
    # in the same database using the standardized name (eg. feateng_comm_day)
    db:
      name: integtest
  # special name, for standardized output pattern
  - id: base_output
    source: hive
    # if database is specified in base, all feature tables will be generated
    # in the same database using the standardized name (eg. feateng_comm_day)
    db:
      name: integtest
      # the corresponding parquet files are saved under this directory
      path: build/integtest-output
  # the name `traffic_day` is an alias used to refer to this table that will be
  # used by the individual feature config
  - id: traffic_day
    source: hive
    table: integtest.db_traffic_hourly
    params:
      dateCol: date_id
      idCol: msisdn
      entityCol: site_id
      siteIdCol: site_id
      hitCol: hit
      durationCol: duration
      bPartyCol: b_party
      latitudeCol: lat
      longitudeCol: long
      volumeCol: volume
      downlinkVolumeCol: downlink_volume
      uplinkVolumeCol: uplink_volume
      urlDomainCol: url_domain
      urlDomainHitCol: total_hits


# global transformers
# they are referenced from the main config
#
# transformer can be overriden by specifying transformer with the same id in the main config
transformations:
  - id: rename_subscriber_type
    className: ai.eureka.featureengine.transformers.ColumnValueRenamed
    params:
      inputCol: payment_category
      outputCol: sub_type
      valueMappings:
        - fromValue: Prepaid
          toValue: prepaid
        - fromValue: Postpaid
          toValue: postpaid
  - id: joinWithCellsite
    className: ai.eureka.featureengine.transformers.JoinById
    params:
      targetTable: integtest.ref_ndb
      inputCols:
        - site_id
      joinType: inner

pipeline:
  stages:
    # `feature` is a special stage, it's transformers are produce by `feature` in the main config
    - id: feature

# global rules
# applied to aggregators and transformers
#
# rule can be overriden by specifying rule with the same id in the main config
# priority: code default < rule < explicit
rules:
  - id: callExpression
    rule:
      value: service_type = 'Voice'
  - id: smsExpression
    rule:
      value: service_type = 'Sms'
  - id: dataExpression
    rule:
      value: service_type = 'Data'
  - id: vasExpression
    rule:
      value: service_type = 'Vas'
  - id: roamingExpression
    rule:
      value: roaming_position = 'OUTBOUND'
  - id: incomingExpression
    rule:
      value: direction_type = 'Incoming'
  - id: outgoingExpression
    rule:
      value: direction_type = 'Outgoing'
  - id: subRenewalExpression
    rule:
      value: subscription_renewal_type = 'renewal'
  - id: newSubExpression
    rule:
      value: subscription_renewal_type = 'new subscription'
  - id: bundleExpiredExpression
    rule:
      value: case when subscription_end = date_sub(day, 1) then 1 else 0 end
  - id: subPackageCol
    rule:
      value: subscription_package
  - id: expiredBundleRankCol
    rule:
      value: rank_expire_bundle
  - id: amountCol
    rule:
      value: amount
  - id: weekdayCol
    rule:
      value: is_weekday
  - id: firstDayOfWeek
    rule:
      value: MONDAY
  - id: weekends
    rule:
      value:
        - SUNDAY
        - SATURDAY
  - id: refNdbTable
    rule:
      value: integtest.ref_ndb
  - id: subscriberTable
    rule:
      value: integtest.db_subscriber_daily
  - id: prepaidSubscriberExpression
    rule:
      value: payment_category = 'Prepaid'
  - id: chargingTable
    rule:
      value: integtest.db_charging_hourly
  - id: subscriptionTable
    rule:
      value: integtest.db_subscription_daily
  - id: postpaidBillingTable
    rule:
      value: integtest.db_billing_postpaid_monthly
  - id: postpaidBillingIdCol
    rule:
      value: msisdn
  - id: dateCol
    rule:
      value: day
  - id: idCol
    rule:
      value: id
